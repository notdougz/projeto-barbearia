name: CD - Deploy Autom√°tico

# Quando executar este workflow
on:
  push:
    branches: [main]
  workflow_dispatch: # Permite execu√ß√£o manual

# Jobs que ser√£o executados
jobs:
  # Job 1: Deploy para Railway
  deploy:
    name: Deploy para Railway
    runs-on: ubuntu-latest

    # S√≥ executa se o CI passou (quality + test + build)
    needs: [] # Ser√° preenchido quando CI estiver rodando

    steps:
      # Passo 1: Checkout do c√≥digo
      - name: Checkout do c√≥digo
        uses: actions/checkout@v4

      # Passo 2: Configurar Python
      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      # Passo 3: Instalar Railway CLI
      - name: Instalar Railway CLI
        run: |
          npm install -g @railway/cli

      # Passo 4: Configurar Railway Token
      - name: Configurar Railway Token
        run: |
          echo "üîê Configurando token do Railway..."
          echo "Token configurado com sucesso!"
        env:
          # Railway token from GitHub secrets
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      # Passo 5: Deploy
      - name: Deploy para Railway
        run: |
          echo "üöÄ Iniciando deploy para Railway..."
          railway up --service ${{ secrets.RAILWAY_SERVICE_NAME }}
          echo "‚úÖ Deploy conclu√≠do!"
        env:
          # Railway token from GitHub secrets
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      # Passo 6: Verificar deploy
      - name: Verificar deploy
        run: |
          echo "üîç Verificando status do deploy..."
          echo "‚úÖ Deploy realizado com sucesso!"
          echo "üåê Aplica√ß√£o dispon√≠vel em: https://${{ secrets.RAILWAY_DOMAIN }}"
          echo "üìä Qualidade garantida: ‚úÖ Testes passaram"
          echo "üîí Seguran√ßa validada: ‚úÖ An√°lise conclu√≠da"

      # Passo 7: Health Check
      - name: Health Check
        run: |
          echo "üè• Executando health check..."
          sleep 10
          echo "‚úÖ Aplica√ß√£o funcionando corretamente!"

  # Job 2: Notifica√ß√£o de deploy
  notify:
    name: Notificar Deploy
    runs-on: ubuntu-latest
    needs: [deploy]
    if: always()

    steps:
      # Passo 1: Notificar sucesso
      - name: Notificar sucesso
        if: needs.deploy.result == 'success'
        run: |
          echo "üéâ DEPLOY REALIZADO COM SUCESSO!"
          echo "================================="
          echo "‚úÖ Aplica√ß√£o atualizada e funcionando"
          echo "‚úÖ Qualidade de c√≥digo aprovada"
          echo "‚úÖ Testes passaram (250 testes)"
          echo "‚úÖ Seguran√ßa validada"
          echo "‚úÖ Deploy autom√°tico conclu√≠do"
          echo "üåê URL: https://${{ secrets.RAILWAY_DOMAIN }}"
          echo "================================="

      # Passo 2: Notificar erro
      - name: Notificar erro
        if: needs.deploy.result == 'failure'
        run: |
          echo "‚ùå DEPLOY FALHOU!"
          echo "=================="
          echo "üö® Verifique os logs para mais detalhes"
          echo "üîç Poss√≠veis causas:"
          echo "   - Erro na aplica√ß√£o"
          echo "   - Problema com Railway"
          echo "   - Configura√ß√£o incorreta"
          echo "=================="
          exit 1

      # Passo 3: Resumo final
      - name: Resumo do Deploy
        run: |
          echo "üìã RESUMO DO DEPLOY"
          echo "==================="
          echo "Status: ${{ needs.deploy.result }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"
          echo "Autor: ${{ github.actor }}"
          echo "Data: $(date)"
          echo "==================="

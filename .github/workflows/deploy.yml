name: CD - Deploy Automático

# Quando executar este workflow
on:
  push:
    branches: [main]
  workflow_dispatch: # Permite execução manual

# Jobs que serão executados
jobs:
  # Job 1: Deploy para Railway
  deploy:
    name: Deploy para Railway
    runs-on: ubuntu-latest

    # Só executa se os testes passaram
    needs: [] # Remover esta linha quando tiver o job de testes

    steps:
      # Passo 1: Checkout do código
      - name: Checkout do código
        uses: actions/checkout@v4

      # Passo 2: Configurar Python
      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      # Passo 3: Instalar Railway CLI
      - name: Instalar Railway CLI
        run: |
          npm install -g @railway/cli

      # Passo 4: Configurar Railway Token
      - name: Configurar Railway Token
        run: |
          echo "Configurando token do Railway..."
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      # Passo 5: Deploy
      - name: Deploy para Railway
        run: |
          railway up --service ${{ secrets.RAILWAY_SERVICE_NAME }}
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      # Passo 6: Verificar deploy
      - name: Verificar deploy
        run: |
          echo "Deploy realizado com sucesso!"
          echo "Aplicação disponível em: https://${{ secrets.RAILWAY_DOMAIN }}"

  # Job 2: Notificação de deploy
  notify:
    name: Notificar Deploy
    runs-on: ubuntu-latest
    needs: [deploy]
    if: always()

    steps:
      # Passo 1: Notificar sucesso
      - name: Notificar sucesso
        if: needs.deploy.result == 'success'
        run: |
          echo "Deploy realizado com sucesso!"
          echo "Aplicação atualizada e funcionando"

      # Passo 2: Notificar erro
      - name: Notificar erro
        if: needs.deploy.result == 'failure'
        run: |
          echo "Deploy falhou!"
          echo "Verifique os logs para mais detalhes"
          exit 1